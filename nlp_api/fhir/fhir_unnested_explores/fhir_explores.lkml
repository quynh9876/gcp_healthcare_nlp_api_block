# Encounter Explore with autogenerated unnested array columns
# include: "../fhir_views/*.view.lkml"
# explore: encounter {
#   hidden: yes

#   join: encounter__type {
#     view_label: "Encounter: Type"
#     sql: LEFT JOIN UNNEST(${encounter.type}) as encounter__type ;;
#     relationship: one_to_many
#   }

#   join: encounter__based_on {
#     view_label: "Encounter: Basedon"
#     sql: LEFT JOIN UNNEST(${encounter.based_on}) as encounter__based_on ;;
#     relationship: one_to_many
#   }

#   join: encounter__meta__profile {
#     view_label: "Encounter: Meta Profile"
#     sql: LEFT JOIN UNNEST(${encounter.meta__profile}) as encounter__meta__profile ;;
#     relationship: one_to_many
#   }

#   join: encounter__account {
#     view_label: "Encounter: Account"
#     sql: LEFT JOIN UNNEST(${encounter.account}) as encounter__account ;;
#     relationship: one_to_many
#   }

#   join: encounter__meta__tag {
#     view_label: "Encounter: Meta Tag"
#     sql: LEFT JOIN UNNEST(${encounter.meta__tag}) as encounter__meta__tag ;;
#     relationship: one_to_many
#   }

#   join: encounter__identifier {
#     view_label: "Encounter: Identifier"
#     sql: LEFT JOIN UNNEST(${encounter.identifier}) as encounter__identifier ;;
#     relationship: one_to_many
#   }

#   join: encounter__diagnosis {
#     view_label: "Encounter: Diagnosis"
#     sql: LEFT JOIN UNNEST(${encounter.diagnosis}) as encounter__diagnosis ;;
#     relationship: one_to_many
#   }

#   join: encounter__reason_code {
#     view_label: "Encounter: Reasoncode"
#     sql: LEFT JOIN UNNEST(${encounter.reason_code}) as encounter__reason_code ;;
#     relationship: one_to_many
#   }

#   join: encounter__location {
#     view_label: "Encounter: Location"
#     sql: LEFT JOIN UNNEST(${encounter.location}) as encounter__location ;;
#     relationship: one_to_many
#   }

#   join: encounter__appointment {
#     view_label: "Encounter: Appointment"
#     sql: LEFT JOIN UNNEST(${encounter.appointment}) as encounter__appointment ;;
#     relationship: one_to_many
#   }

#   join: encounter__type__coding {
#     view_label: "Encounter: Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__type.coding}) as encounter__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__episode_of_care {
#     view_label: "Encounter: Episodeofcare"
#     sql: LEFT JOIN UNNEST(${encounter.episode_of_care}) as encounter__episode_of_care ;;
#     relationship: one_to_many
#   }

#   join: encounter__meta__security {
#     view_label: "Encounter: Meta Security"
#     sql: LEFT JOIN UNNEST(${encounter.meta__security}) as encounter__meta__security ;;
#     relationship: one_to_many
#   }

#   join: encounter__reason_reference {
#     view_label: "Encounter: Reasonreference"
#     sql: LEFT JOIN UNNEST(${encounter.reason_reference}) as encounter__reason_reference ;;
#     relationship: one_to_many
#   }

#   join: encounter__priority__coding {
#     view_label: "Encounter: Priority Coding"
#     sql: LEFT JOIN UNNEST(${encounter.priority__coding}) as encounter__priority__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__status_history {
#     view_label: "Encounter: Statushistory"
#     sql: LEFT JOIN UNNEST(${encounter.status_history}) as encounter__status_history ;;
#     relationship: one_to_many
#   }

#   join: encounter__participant__type {
#     view_label: "Encounter: Participant Type"
#     sql: LEFT JOIN UNNEST(${encounter.participant__type}) as encounter__participant__type ;;
#     relationship: one_to_many
#   }

#   join: encounter__reason_code__coding {
#     view_label: "Encounter: Reasoncode Coding"
#     sql: LEFT JOIN UNNEST(${encounter__reason_code.coding}) as encounter__reason_code__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__service_type__coding {
#     view_label: "Encounter: Servicetype Coding"
#     sql: LEFT JOIN UNNEST(${encounter.service_type__coding}) as encounter__service_type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__class_history {
#     view_label: "Encounter: Classhistory"
#     sql: LEFT JOIN UNNEST(${encounter.class_history}) as encounter__class_history ;;
#     relationship: one_to_many
#   }

#   join: encounter__participant {
#     view_label: "Encounter: Participant"
#     sql: LEFT JOIN UNNEST(${encounter.participant}) as encounter__participant ;;
#     relationship: one_to_many
#   }

#   join: encounter__diagnosis__use__coding {
#     view_label: "Encounter: Diagnosis Use Coding"
#     sql: LEFT JOIN UNNEST(${encounter__diagnosis.use__coding}) as encounter__diagnosis__use__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__identifier__type__coding {
#     view_label: "Encounter: Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__identifier.type__coding}) as encounter__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__participant__type__coding {
#     view_label: "Encounter: Participant Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__participant__type.coding}) as encounter__participant__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__location__physical_type__coding {
#     view_label: "Encounter: Location Physicaltype Coding"
#     sql: LEFT JOIN UNNEST(${encounter__location.physical_type__coding}) as encounter__location__physical_type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__part_of__identifier__type__coding {
#     view_label: "Encounter: Partof Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.part_of__identifier__type__coding}) as encounter__part_of__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__subject__identifier__type__coding {
#     view_label: "Encounter: Subject Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.subject__identifier__type__coding}) as encounter__subject__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__based_on__identifier__type__coding {
#     view_label: "Encounter: Basedon Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__based_on.identifier__type__coding}) as encounter__based_on__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__diet_preference {
#     view_label: "Encounter: Hospitalization Dietpreference"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__diet_preference}) as encounter__hospitalization__diet_preference ;;
#     relationship: one_to_many
#   }

#   join: encounter__account__identifier__type__coding {
#     view_label: "Encounter: Account Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__account.identifier__type__coding}) as encounter__account__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__special_courtesy {
#     view_label: "Encounter: Hospitalization Specialcourtesy"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__special_courtesy}) as encounter__hospitalization__special_courtesy ;;
#     relationship: one_to_many
#   }

#   join: encounter__appointment__identifier__type__coding {
#     view_label: "Encounter: Appointment Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__appointment.identifier__type__coding}) as encounter__appointment__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__special_arrangement {
#     view_label: "Encounter: Hospitalization Specialarrangement"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__special_arrangement}) as encounter__hospitalization__special_arrangement ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__re_admission__coding {
#     view_label: "Encounter: Hospitalization Readmission Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__re_admission__coding}) as encounter__hospitalization__re_admission__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__admit_source__coding {
#     view_label: "Encounter: Hospitalization Admitsource Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__admit_source__coding}) as encounter__hospitalization__admit_source__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__episode_of_care__identifier__type__coding {
#     view_label: "Encounter: Episodeofcare Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__episode_of_care.identifier__type__coding}) as encounter__episode_of_care__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__diet_preference__coding {
#     view_label: "Encounter: Hospitalization Dietpreference Coding"
#     sql: LEFT JOIN UNNEST(${encounter__hospitalization__diet_preference.coding}) as encounter__hospitalization__diet_preference__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__reason_reference__identifier__type__coding {
#     view_label: "Encounter: Reasonreference Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__reason_reference.identifier__type__coding}) as encounter__reason_reference__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__special_courtesy__coding {
#     view_label: "Encounter: Hospitalization Specialcourtesy Coding"
#     sql: LEFT JOIN UNNEST(${encounter__hospitalization__special_courtesy.coding}) as encounter__hospitalization__special_courtesy__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__service_provider__identifier__type__coding {
#     view_label: "Encounter: Serviceprovider Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.service_provider__identifier__type__coding}) as encounter__service_provider__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__location__location__identifier__type__coding {
#     view_label: "Encounter: Location Location Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__location.location__identifier__type__coding}) as encounter__location__location__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__special_arrangement__coding {
#     view_label: "Encounter: Hospitalization Specialarrangement Coding"
#     sql: LEFT JOIN UNNEST(${encounter__hospitalization__special_arrangement.coding}) as encounter__hospitalization__special_arrangement__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__identifier.assigner__identifier__type__coding}) as encounter__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__diagnosis__condition__identifier__type__coding {
#     view_label: "Encounter: Diagnosis Condition Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__diagnosis.condition__identifier__type__coding}) as encounter__diagnosis__condition__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__discharge_disposition__coding {
#     view_label: "Encounter: Hospitalization Dischargedisposition Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__discharge_disposition__coding}) as encounter__hospitalization__discharge_disposition__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__participant__individual__identifier__type__coding {
#     view_label: "Encounter: Participant Individual Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__participant.individual__identifier__type__coding}) as encounter__participant__individual__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__origin__identifier__type__coding {
#     view_label: "Encounter: Hospitalization Origin Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__origin__identifier__type__coding}) as encounter__hospitalization__origin__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__part_of__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Partof Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.part_of__identifier__assigner__identifier__type__coding}) as encounter__part_of__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__subject__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Subject Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.subject__identifier__assigner__identifier__type__coding}) as encounter__subject__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__based_on__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Basedon Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__based_on.identifier__assigner__identifier__type__coding}) as encounter__based_on__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__destination__identifier__type__coding {
#     view_label: "Encounter: Hospitalization Destination Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__destination__identifier__type__coding}) as encounter__hospitalization__destination__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__pre_admission_identifier__type__coding {
#     view_label: "Encounter: Hospitalization Preadmissionidentifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__pre_admission_identifier__type__coding}) as encounter__hospitalization__pre_admission_identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__account__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Account Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__account.identifier__assigner__identifier__type__coding}) as encounter__account__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__appointment__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Appointment Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__appointment.identifier__assigner__identifier__type__coding}) as encounter__appointment__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__episode_of_care__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Episodeofcare Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__episode_of_care.identifier__assigner__identifier__type__coding}) as encounter__episode_of_care__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__reason_reference__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Reasonreference Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__reason_reference.identifier__assigner__identifier__type__coding}) as encounter__reason_reference__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__service_provider__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Serviceprovider Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.service_provider__identifier__assigner__identifier__type__coding}) as encounter__service_provider__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__location__location__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Location Location Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__location.location__identifier__assigner__identifier__type__coding}) as encounter__location__location__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__diagnosis__condition__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Diagnosis Condition Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__diagnosis.condition__identifier__assigner__identifier__type__coding}) as encounter__diagnosis__condition__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__participant__individual__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Participant Individual Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter__participant.individual__identifier__assigner__identifier__type__coding}) as encounter__participant__individual__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__origin__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Hospitalization Origin Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__origin__identifier__assigner__identifier__type__coding}) as encounter__hospitalization__origin__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__destination__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Hospitalization Destination Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__destination__identifier__assigner__identifier__type__coding}) as encounter__hospitalization__destination__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__pre_admission_identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Hospitalization Preadmissionidentifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__pre_admission_identifier__assigner__identifier__type__coding}) as encounter__hospitalization__pre_admission_identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: encounter__hospitalization__pre_admission_identifier__assigner__identifier__assigner__identifier__type__coding {
#     view_label: "Encounter: Hospitalization Preadmissionidentifier Assigner Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${encounter.hospitalization__pre_admission_identifier__assigner__identifier__assigner__identifier__type__coding}) as encounter__hospitalization__pre_admission_identifier__assigner__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }
# }


# Patient Explore with autogenerated unnested array columns
# explore: patient {
#   hidden: yes

#   join: patient__name {
#     view_label: "Patient: Name"
#     sql: LEFT JOIN UNNEST(${patient.name}) as patient__name ;;
#     relationship: one_to_many
#   }

#   join: patient__link {
#     view_label: "Patient: Link"
#     sql: LEFT JOIN UNNEST(${patient.link}) as patient__link ;;
#     relationship: one_to_many
#   }

#   join: patient__photo {
#     view_label: "Patient: Photo"
#     sql: LEFT JOIN UNNEST(${patient.photo}) as patient__photo ;;
#     relationship: one_to_many
#   }

#   join: patient__name__given {
#     view_label: "Patient: Name Given"
#     sql: LEFT JOIN UNNEST(${patient__name.given}) as patient__name__given ;;
#     relationship: one_to_many
#   }

#   join: patient__telecom {
#     view_label: "Patient: Telecom"
#     sql: LEFT JOIN UNNEST(${patient.telecom}) as patient__telecom ;;
#     relationship: one_to_many
#   }

#   join: patient__address {
#     view_label: "Patient: Address"
#     sql: LEFT JOIN UNNEST(${patient.address}) as patient__address ;;
#     relationship: one_to_many
#   }

#   join: patient__name__prefix {
#     view_label: "Patient: Name Prefix"
#     sql: LEFT JOIN UNNEST(${patient__name.prefix}) as patient__name__prefix ;;
#     relationship: one_to_many
#   }

#   join: patient__name__suffix {
#     view_label: "Patient: Name Suffix"
#     sql: LEFT JOIN UNNEST(${patient__name.suffix}) as patient__name__suffix ;;
#     relationship: one_to_many
#   }

#   join: patient__address__line {
#     view_label: "Patient: Address Line"
#     sql: LEFT JOIN UNNEST(${patient__address.line}) as patient__address__line ;;
#     relationship: one_to_many
#   }

#   join: patient__meta__profile {
#     view_label: "Patient: Meta Profile"
#     sql: LEFT JOIN UNNEST(${patient.meta__profile}) as patient__meta__profile ;;
#     relationship: one_to_many
#   }

#   join: patient__meta__tag {
#     view_label: "Patient: Meta Tag"
#     sql: LEFT JOIN UNNEST(${patient.meta__tag}) as patient__meta__tag ;;
#     relationship: one_to_many
#   }

#   join: patient__contact {
#     view_label: "Patient: Contact"
#     sql: LEFT JOIN UNNEST(${patient.contact}) as patient__contact ;;
#     relationship: one_to_many
#   }

#   join: patient__identifier {
#     view_label: "Patient: Identifier"
#     sql: LEFT JOIN UNNEST(${patient.identifier}) as patient__identifier ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__name__given {
#     view_label: "Patient: Contact Name Given"
#     sql: LEFT JOIN UNNEST(${patient__contact.name__given}) as patient__contact__name__given ;;
#     relationship: one_to_many
#   }

#   join: patient__meta__security {
#     view_label: "Patient: Meta Security"
#     sql: LEFT JOIN UNNEST(${patient.meta__security}) as patient__meta__security ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__name__prefix {
#     view_label: "Patient: Contact Name Prefix"
#     sql: LEFT JOIN UNNEST(${patient__contact.name__prefix}) as patient__contact__name__prefix ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__name__suffix {
#     view_label: "Patient: Contact Name Suffix"
#     sql: LEFT JOIN UNNEST(${patient__contact.name__suffix}) as patient__contact__name__suffix ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__telecom {
#     view_label: "Patient: Contact Telecom"
#     sql: LEFT JOIN UNNEST(${patient__contact.telecom}) as patient__contact__telecom ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__address__line {
#     view_label: "Patient: Contact Address Line"
#     sql: LEFT JOIN UNNEST(${patient__contact.address__line}) as patient__contact__address__line ;;
#     relationship: one_to_many
#   }

#   join: patient__communication {
#     view_label: "Patient: Communication"
#     sql: LEFT JOIN UNNEST(${patient.communication}) as patient__communication ;;
#     relationship: one_to_many
#   }

#   join: patient__general_practitioner {
#     view_label: "Patient: Generalpractitioner"
#     sql: LEFT JOIN UNNEST(${patient.general_practitioner}) as patient__general_practitioner ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__relationship {
#     view_label: "Patient: Contact Relationship"
#     sql: LEFT JOIN UNNEST(${patient__contact.relationship}) as patient__contact__relationship ;;
#     relationship: one_to_many
#   }

#   join: patient__marital_status__coding {
#     view_label: "Patient: Maritalstatus Coding"
#     sql: LEFT JOIN UNNEST(${patient.marital_status__coding}) as patient__marital_status__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__identifier__type__coding {
#     view_label: "Patient: Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__identifier.type__coding}) as patient__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__relationship__coding {
#     view_label: "Patient: Contact Relationship Coding"
#     sql: LEFT JOIN UNNEST(${patient__contact__relationship.coding}) as patient__contact__relationship__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__communication__language__coding {
#     view_label: "Patient: Communication Language Coding"
#     sql: LEFT JOIN UNNEST(${patient__communication.language__coding}) as patient__communication__language__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__link__other__identifier__type__coding {
#     view_label: "Patient: Link Other Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__link.other__identifier__type__coding}) as patient__link__other__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__general_practitioner__identifier__type__coding {
#     view_label: "Patient: Generalpractitioner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__general_practitioner.identifier__type__coding}) as patient__general_practitioner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__identifier__assigner__identifier__type__coding {
#     view_label: "Patient: Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__identifier.assigner__identifier__type__coding}) as patient__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__organization__identifier__type__coding {
#     view_label: "Patient: Contact Organization Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__contact.organization__identifier__type__coding}) as patient__contact__organization__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__managing_organization__identifier__type__coding {
#     view_label: "Patient: Managingorganization Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient.managing_organization__identifier__type__coding}) as patient__managing_organization__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__link__other__identifier__assigner__identifier__type__coding {
#     view_label: "Patient: Link Other Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__link.other__identifier__assigner__identifier__type__coding}) as patient__link__other__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__general_practitioner__identifier__assigner__identifier__type__coding {
#     view_label: "Patient: Generalpractitioner Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__general_practitioner.identifier__assigner__identifier__type__coding}) as patient__general_practitioner__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__contact__organization__identifier__assigner__identifier__type__coding {
#     view_label: "Patient: Contact Organization Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient__contact.organization__identifier__assigner__identifier__type__coding}) as patient__contact__organization__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }

#   join: patient__managing_organization__identifier__assigner__identifier__type__coding {
#     view_label: "Patient: Managingorganization Identifier Assigner Identifier Type Coding"
#     sql: LEFT JOIN UNNEST(${patient.managing_organization__identifier__assigner__identifier__type__coding}) as patient__managing_organization__identifier__assigner__identifier__type__coding ;;
#     relationship: one_to_many
#   }
# }
